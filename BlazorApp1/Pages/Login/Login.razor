@page "/"
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject HttpClient Http
@inject NotificationService notificationService

<h3>Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Correo Electrónico:</label>
        <InputText id="email" class="form-control" @bind-Value="loginModel.correo" />
    </div>
    <div class="form-group">
        <label for="password">Contraseña:</label>
        <InputText id="password" class="form-control" @bind-Value="loginModel.clave" type="password" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Iniciar sesión</button>
    </div>
</EditForm>

@code {
    private UsuarioLogin loginModel = new UsuarioLogin();

    private async Task HandleLogin()
    {
        if (!string.IsNullOrEmpty(loginModel.correo) && !string.IsNullOrEmpty(loginModel.clave))
        {
            // Aquí puedes realizar una petición al backend para verificar las credenciales
            var response = await Http.PostAsJsonAsync("api/Autenticacion", loginModel);

            if (response.IsSuccessStatusCode)
            {
                TokenResponse token = await response.Content.ReadFromJsonAsync<TokenResponse>();

                // Guarda el usuario en el localStorage si el login es exitoso
                await localStorage.SetItemAsync("token", token.token);

                // Redirige a otra página después de un login exitoso
                Navigation.NavigateTo("/services");
            }
            else
            {
                MostrarAlerta(response);

            }
        }
    }
    
    private void MostrarAlerta(HttpResponseMessage response)
    {
        notificationService.Notify(
    new NotificationMessage
                  {
                      Severity = NotificationSeverity.Error,
                      SummaryContent = ns => @<RadzenText TextStyle="TextStyle.H6" Style="white-space: normal; word-wrap: break-word;">
       Error: <br /> @DateTime.Now
    </RadzenText>
    ,
            Duration = 10000,
            Detail = response.Content.ToString(), // Mostrar todo el mensaje
        }
    );
    }




}
